@using CollegeVotingSystem.Models
@model tbl_User
@{
    ViewBag.Title = "My Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="pagetitle">
    <h1>My Profile</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Dashboard</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "User")">User</a></li>
            <li class="breadcrumb-item active">@ViewBag.Title</li>
        </ol>
    </nav>
</div>

<div class="row g-2">
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <div class="card-title">@ViewBag.Title</div>
                @using (Html.BeginForm("Profile", "User", new { area = "" }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="row mb-2 g-2">
                        <div class="col-md-12">
                            @Html.HiddenFor(model => model.ID)
                            @if (ViewBag.Message != null)
                            {
		                        <p class="text-success">@ViewBag.Message</p>
                            }
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-12">
                            <div class="row mb-3">
                                @Html.LabelFor(model => model.Username, new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control form-control-sm", @readonly = "true" } })
                                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row mb-3">
                                @Html.LabelFor(model => model.Password, new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row mb-3">
                                @Html.LabelFor(model => model.StudentID, new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.StudentID, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row mb-3">
                                @Html.LabelFor(model => model.fname, new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.fname, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    @Html.ValidationMessageFor(model => model.fname, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row mb-3">
                                @Html.LabelFor(model => model.mn, new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.mn, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    @Html.ValidationMessageFor(model => model.mn, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row mb-3">
                                @Html.LabelFor(model => model.lname, new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.lname, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    @Html.ValidationMessageFor(model => model.lname, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row mb-3">
                                @Html.LabelFor(model => model.Img, new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                <div class="col-sm-10">
                                    <input type="file" name="Upload" accept="image/jpeg" class="form-control form-control-sm" />
                                    @Html.ValidationMessageFor(model => model.Img, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row mb-3">
                                @Html.LabelFor(model => model.Gender, new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(model => model.Gender,
                                    new List<SelectListItem>
                                    {
                                        new SelectListItem { Text = "Male", Value = "Male" },
                                        new SelectListItem { Text = "Female", Value = "Female" }
                                    }, "Select Gender", new { @class = "form-select form-select-sm" })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row mb-3">
                                @Html.LabelFor(model => model.bday, new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(model => model.bday, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    @Html.ValidationMessageFor(model => model.bday, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row mb-3">
                                @Html.LabelFor(model => model.Course, new { @class = "col-sm-2 col-form-label col-form-label-sm" })
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(model => model.Course, new tbl_Course().ListCourse(), "Select Course", new { @class = "form-select form-select-sm searchbox" })
                                    @Html.ValidationMessageFor(model => model.Course, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-md-12">
                            <input type="submit" value="Update" class="btn btn-success" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <div class="card-title">Information</div>
                <div class="row">
                    <div class="col-md-3">
                        <img src="@string.Format("{0}", Model.Img == null ? Url.Content("~/Content/Img/noimage-available.jpeg") : Model.Img64)" width="100%" alt="Alternate Text" />
                    </div>
                    <div class="col-md-9">
                        <h4>@Model.Fullname</h4>
                        <span>@Model.CourseName</span><br />
                        <span><b>@Model.StudentID</b></span><br />
                        <span>@Model.Age Years old</span><br />
                        @if (Model.Fingerprint1 == null)
                        {
                            <span class="text-danger fa-fade"><i class="fa fa-exclamation-triangle"></i> No available fingerprint</span>
                        }
                        else
                        {
                            <span class="text-success"><i class="fa fa-check-circle"></i> Fingerprint verified</span>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
